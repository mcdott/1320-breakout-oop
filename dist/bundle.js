(()=>{"use strict";const t=class{constructor(t=0,s=0,i=10,e=0,h="red"){this.x=t,this.y=s,this.width=i,this.height=e,this.color=h}moveBy(t,s){this.x+=t,this.y+=s}moveTo(t,s){this.x=t,this.y=s}render(t){t.beginPath(),t.rect(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill(),t.closePath()}},s=class extends t{constructor(t=0,s=0,i=2,e=-1,h=10,l="red"){super(t,s,2*h,2*h,l),this.dx=i,this.dy=e,this.radius=h,this.PI2=2*Math.PI}move(){this.moveBy(this.dx,this.dy)}render(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,this.PI2),t.fillStyle=this.color,t.fill(),t.closePath()}},i=class extends t{constructor(t,s,i,e,h){super(t,s,i,e,h),this.status=1}},e=class extends t{constructor(t,s,i,e,h="16px Arial"){super(s,i,0,0,e),this.text=t,this.value=0,this.font=h}render(t){t.font=this.font,t.fillStyle=this.color,t.fillText(`${this.text} ${this.value}`,this.x,this.y)}};new class{constructor(h){this.canvas=document.getElementById(h),this.ctx=this.canvas.getContext("2d"),this.ballRadius=10,this.paddleHeight=10,this.paddleWidth=75,this.brickRowCount=3,this.brickColumnCount=5,this.brickWidth=75,this.brickHeight=20,this.brickPadding=10,this.brickOffsetTop=30,this.brickOffsetLeft=30,this.paddleXStart=(this.canvas.width-this.paddleWidth)/2,this.paddleYStart=this.canvas.height-this.paddleHeight,this.objectPrimaryColor="#0095DD",this.gameOverMessage="Game Over",this.gameWonMessage="You win! Congratulations!",this.ball=new s(0,0,2,-2,this.ballRadius,this.objectPrimaryColor),this.paddle=new t(this.paddleXStart,this.paddleYStart,this.paddleWidth,this.paddleHeight,this.objectPrimaryColor),this.bricks=new class{constructor(t){this.columns=t.columns,this.rows=t.rows,this.width=t.width,this.height=t.height,this.padding=t.padding,this.offsetLeft=t.offsetLeft,this.offsetTop=t.offsetTop,this.color=t.color,this.bricks=[],this.init()}init(){this.bricks=[];for(let t=0;t<this.columns*this.rows;t+=1){const s=t%this.columns,e=Math.floor(t/this.columns),h=s*(this.width+this.padding)+this.offsetLeft,l=e*(this.height+this.padding)+this.offsetTop;this.bricks[t]=new i(h,l,this.width,this.height,this.color)}}render(t){for(let s=0;s<this.bricks.length;s+=1){const i=this.bricks[s];1===i.status&&i.render(t)}}}({columns:this.brickColumnCount,rows:this.brickRowCount,width:this.brickWidth,height:this.brickHeight,padding:this.brickPadding,offsetLeft:this.brickOffsetLeft,offsetTop:this.brickOffsetTop,color:this.objectPrimaryColor}),this.scoreText=new e("Score:",8,20,this.objectPrimaryColor),this.livesText=new e("Lives: ",this.canvas.width-65,20,this.objectPrimaryColor),this.rightPressed=!1,this.leftPressed=!1,this.setup(),this.draw()}setup(){this.livesText.value=3,this.resetBallAndPaddle(),document.addEventListener("keydown",this.keyDownHandler.bind(this),!1),document.addEventListener("keyup",this.keyUpHandler.bind(this),!1),document.addEventListener("mousemove",this.mouseMoveHandler.bind(this),!1)}resetBallAndPaddle(){this.ball.x=this.canvas.width/2,this.ball.y=this.canvas.height-30,this.ball.dx=2,this.dy=-2,this.paddleX=this.paddleXStart}rectangleCollision(t){let s=!1;const i=this.ball.x+this.ball.radius,e=this.ball.x-this.ball.radius,h=this.ball.y-this.ball.radius,l=this.ball.y+this.ball.radius,a=t.x+t.width,d=t.x,r=t.y,o=t.y+t.height;return i>d&&e<a&&h<o&&l>r&&(s=!0),s}collisionDetection(){for(let t=0;t<this.bricks.bricks.length;t+=1){const s=this.bricks.bricks[t];1===s.status&&this.rectangleCollision(s)&&(this.ball.dy=-this.ball.dy,s.status=0,this.scoreText.value+=1,this.scoreText.value===this.bricks.length&&(alert(this.gameWonMessage),document.location.reload()))}}movePaddle(){this.rightPressed&&this.paddle.x<this.canvas.width-this.paddle.width?this.paddle.moveBy(7,0):this.leftPressed&&this.paddle.x>0&&this.paddle.moveBy(-7,0)}collisionWithCanvasEdgesAndPaddle(){(this.ball.x+this.ball.dx>this.canvas.width-this.ball.radius||this.ball.x+this.ball.dx<this.ball.radius)&&(this.ball.dx=-this.ball.dx),this.ball.y+this.ball.dy<this.ball.radius?this.ball.dy=-this.ball.dy:this.ball.y+this.ball.dy>this.canvas.height-this.ball.radius&&(this.ball.x>this.paddle.x&&this.ball.x<this.paddle.x+this.paddle.width?this.ball.dy=-this.ball.dy:(this.livesText.value-=1,this.livesText.value<1?(alert(this.gameOverMessage),document.location.reload()):this.resetBallAndPaddle()))}keyDownHandler(t){"Right"===t.key||"ArrowRight"===t.key?this.rightPressed=!0:"Left"!==t.key&&"ArrowLeft"!==t.key||(this.leftPressed=!0)}keyUpHandler(t){"Right"===t.key||"ArrowRight"===t.key?this.rightPressed=!1:"Left"!==t.key&&"ArrowLeft"!==t.key||(this.leftPressed=!1)}mouseMoveHandler(t){const s=t.clientX-this.canvas.offsetLeft;s>0&&s<this.canvas.width&&this.paddle.moveTo(s-this.paddle.width/2,this.paddleYStart)}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bricks.render(this.ctx),this.ball.render(this.ctx),this.paddle.render(this.ctx),this.scoreText.render(this.ctx),this.livesText.render(this.ctx),this.collisionDetection(),this.ball.move(),this.movePaddle(),this.collisionWithCanvasEdgesAndPaddle(),requestAnimationFrame(this.draw.bind(this))}}("myCanvas")})();